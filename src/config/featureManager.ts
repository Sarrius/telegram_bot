// Feature Manager –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –±–æ—Ç–∞
export interface FeatureState {
  powerWords: boolean;
  moderation: boolean;
  news: boolean;
  weather: boolean;
  memes: boolean;
  memory: boolean;
  nlp: boolean;
  atmosphere: boolean;
  profanityFilter: boolean;
  knowledgeSearch: boolean;
}

export interface FeatureConfig {
  features: FeatureState;
  timestamp: number;
}

export class FeatureManager {
  private static instance: FeatureManager;
  private features: FeatureState = {
    powerWords: true,
    moderation: true,
    news: true,
    weather: true,
    memes: true,
    memory: true,
    nlp: true,
    atmosphere: true,
    profanityFilter: true,
    knowledgeSearch: true
  };
  
  private constructor() {
    this.loadConfig();
  }

  public static getInstance(): FeatureManager {
    if (!FeatureManager.instance) {
      FeatureManager.instance = new FeatureManager();
    }
    return FeatureManager.instance;
  }

  public enableFeature(feature: keyof FeatureState): string {
    if (!(feature in this.features)) {
      return `‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è: ${feature}`;
    }
    
    this.features[feature] = true;
    this.saveConfig();
    return `‚úÖ –§—É–Ω–∫—Ü—ñ—é "${feature}" —É–≤—ñ–º–∫–Ω–µ–Ω–æ`;
  }

  public disableFeature(feature: keyof FeatureState): string {
    if (!(feature in this.features)) {
      return `‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è: ${feature}`;
    }
    
    this.features[feature] = false;
    this.saveConfig();
    return `üî¥ –§—É–Ω–∫—Ü—ñ—é "${feature}" –≤–∏–º–∫–Ω–µ–Ω–æ`;
  }

  public toggleFeature(feature: keyof FeatureState): string {
    if (!(feature in this.features)) {
      return `‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è: ${feature}`;
    }
    
    this.features[feature] = !this.features[feature];
    this.saveConfig();
    const status = this.features[feature] ? '—É–≤—ñ–º–∫–Ω–µ–Ω–æ' : '–≤–∏–º–∫–Ω–µ–Ω–æ';
    const emoji = this.features[feature] ? '‚úÖ' : 'üî¥';
    return `${emoji} –§—É–Ω–∫—Ü—ñ—é "${feature}" ${status}`;
  }

  public isEnabled(feature: keyof FeatureState): boolean {
    return this.features[feature] || false;
  }

  public getFeatureStatus(): string {
    const statusLines = Object.entries(this.features).map(([name, enabled]) => {
      const emoji = enabled ? '‚úÖ' : 'üî¥';
      const status = enabled ? '—É–≤—ñ–º–∫–Ω–µ–Ω–æ' : '–≤–∏–º–∫–Ω–µ–Ω–æ';
      return `  ${name.padEnd(15)} ${emoji} ${status}`;
    });

    return `üéõÔ∏è **–°—Ç–∞—Ç—É—Å —Ñ—É–Ω–∫—Ü—ñ–π:**\n${statusLines.join('\n')}`;
  }

  public getAllFeatures(): FeatureState {
    return { ...this.features };
  }

  public enableAll(): string {
    Object.keys(this.features).forEach(feature => {
      this.features[feature as keyof FeatureState] = true;
    });
    this.saveConfig();
    return '‚úÖ –í—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —É–≤—ñ–º–∫–Ω–µ–Ω–æ';
  }

  public disableAll(): string {
    Object.keys(this.features).forEach(feature => {
      this.features[feature as keyof FeatureState] = false;
    });
    this.saveConfig();
    return 'üî¥ –í—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–º–∫–Ω–µ–Ω–æ';
  }

  public resetToDefaults(): string {
    this.features = {
      powerWords: true,
      moderation: true,
      news: true,
      weather: true,
      memes: true,
      memory: true,
      nlp: true,
      atmosphere: true,
      profanityFilter: true,
      knowledgeSearch: true
    };
    this.saveConfig();
    return 'üîÑ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é —Å–∫–∏–Ω—É—Ç–æ –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å';
  }

  private saveConfig(): void {
    try {
      const config: FeatureConfig = {
        features: this.features,
        timestamp: Date.now()
      };
      
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (runtime)
      Object.entries(this.features).forEach(([name, enabled]) => {
        process.env[`FEATURE_${name.toUpperCase()}`] = enabled.toString();
      });
      
      console.log('‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é —Ñ—É–Ω–∫—Ü—ñ–π –∑–±–µ—Ä–µ–∂–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:', error);
    }
  }

  private loadConfig(): void {
    try {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
      Object.keys(this.features).forEach(feature => {
        const envVar = `FEATURE_${feature.toUpperCase()}`;
        const envValue = process.env[envVar];
        if (envValue !== undefined) {
          this.features[feature as keyof FeatureState] = envValue === 'true';
        }
      });
      
      console.log('‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é —Ñ—É–Ω–∫—Ü—ñ–π –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:', error);
    }
  }

  public getAvailableFeatures(): string[] {
    return Object.keys(this.features);
  }

  public getFeatureHelp(): string {
    return `
üéõÔ∏è **–î–æ—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è:**

‚ö° **powerWords**      - –†–µ–∞–∫—Ü—ñ—ó –Ω–∞ –ø–æ—Ç—É–∂–Ω—ñ —Å–ª–æ–≤–∞ ("–ø–æ—Ç—É–∂–Ω–æ", "—Å—É–ø–µ—Ä", —Ç–æ—â–æ)
üõ°Ô∏è **moderation**     - –ú–æ–¥–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É —Ç–∞ –Ω–µ—Ü–µ–Ω–∑—É—Ä—â–∏–Ω–∏  
üì∞ **news**           - –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω
üå§Ô∏è **weather**        - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–≥–æ–¥—É
üé≠ **memes**          - –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –º–µ–º—ñ–≤
üß† **memory**         - –°–∏—Å—Ç–µ–º–∞ –ø–∞–º'—è—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
üí¨ **nlp**            - NLP —Ä–æ–∑–º–æ–≤–∏ —Ç–∞ —Ä–æ–∑—É–º—ñ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
üåü **atmosphere**     - –ü—ñ–¥–≤–∏—â–µ–Ω–Ω—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∏ —É —á–∞—Ç–∞—Ö
üö´ **profanityFilter** - –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ—ó –ª–µ–∫—Å–∏–∫–∏
üîç **knowledgeSearch** - –Ü–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∏–π –ø–æ—à—É–∫ —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è

üìã **–ö–æ–º–∞–Ω–¥–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è:**
  enable <—Ñ—É–Ω–∫—Ü—ñ—è>     - —É–≤—ñ–º–∫–Ω—É—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é
  disable <—Ñ—É–Ω–∫—Ü—ñ—è>    - –≤–∏–º–∫–Ω—É—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é  
  toggle <—Ñ—É–Ω–∫—Ü—ñ—è>     - –ø–µ—Ä–µ–º–∫–Ω—É—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é
  status               - –ø–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π
  enable-all           - —É–≤—ñ–º–∫–Ω—É—Ç–∏ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  disable-all          - –≤–∏–º–∫–Ω—É—Ç–∏ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  reset                - —Å–∫–∏–Ω—É—Ç–∏ –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å

üí° **–ü—Ä–∏–∫–ª–∞–¥–∏:**
  enable powerWords    - —É–≤—ñ–º–∫–Ω—É—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ –ø–æ—Ç—É–∂–Ω—ñ —Å–ª–æ–≤–∞
  disable moderation   - –≤–∏–º–∫–Ω—É—Ç–∏ –º–æ–¥–µ—Ä–∞—Ü—ñ—é
  toggle memes         - –ø–µ—Ä–µ–º–∫–Ω—É—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –º–µ–º—ñ–≤
  status               - –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å
`;
  }
} 