const { UserMemory } = require('./dist/domain/userMemory');

function testMemorySystem() {
    console.log('üß† –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –ø–∞–º\'—è—Ç—ñ –±–æ—Ç–∞\n');
    
    const memory = new UserMemory();
    
    // –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
    const users = [
        { id: 'user1', username: 'GoodUser', firstName: '–Ü–≤–∞–Ω' },
        { id: 'user2', username: 'BadUser', firstName: '–ü–µ—Ç—Ä–æ' },
        { id: 'user3', username: 'MixedUser', firstName: '–ú–∞—Ä—ñ—è' }
    ];
    
    console.log('üìù –°—Ü–µ–Ω–∞—Ä—ñ–π 1: –î–æ–±—Ä–æ–ø–æ—Ä—è–¥–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á');
    console.log('=' .repeat(50));
    
    // –î–æ–±—Ä–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    let response = memory.analyzeMessage(users[0].id, users[0].username, users[0].firstName, '–ü—Ä–∏–≤—ñ—Ç! –î—è–∫—É—é –∑–∞ –¥–æ–ø–æ–º–æ–≥—É!', false);
    console.log(`‚úÖ –ü–æ–∑–∏—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "${response.memoryMessage || '–ù–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ'}" (${response.emotionalState})`);
    
    response = memory.analyzeMessage(users[0].id, users[0].username, users[0].firstName, '–ü–æ–∫–∞–∂–∏ –º–µ–º', true);
    console.log(`üéØ –ü—Ä–æ—Ö–∞–Ω–Ω—è: "${response.memoryMessage || '–í—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ–∑–≤–æ–ª–µ–Ω–∞'}" (–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: ${response.shouldBlock})`);
    
    console.log('\nüìù –°—Ü–µ–Ω–∞—Ä—ñ–π 2: –¢–æ–∫—Å–∏—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á');
    console.log('=' .repeat(50));
    
    // –ü–æ–≥–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á - –æ–±—Ä–∞–∑–∞
    response = memory.analyzeMessage(users[1].id, users[1].username, users[1].firstName, '–¢–∏ –¥—É—Ä–∞–∫, –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–º—ñ—î—à!', false);
    console.log(`‚ùå –û–±—Ä–∞–∑–ª–∏–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "${response.memoryMessage || '–û–±—Ä–∞–∑–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞'}" (${response.emotionalState})`);
    
    // –°–ø—Ä–æ–±–∞ –∑—Ä–æ–±–∏—Ç–∏ –ø—Ä–æ—Ö–∞–Ω–Ω—è –±–µ–∑ –≤–∏–±–∞—á–µ–Ω–Ω—è
    response = memory.analyzeMessage(users[1].id, users[1].username, users[1].firstName, '–ü–æ–∫–∞–∂–∏ –º–µ–º', true);
    console.log(`üö´ –ü—Ä–æ—Ö–∞–Ω–Ω—è –ø—ñ—Å–ª—è –æ–±—Ä–∞–∑–∏:`);
    console.log(`   –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: ${response.shouldBlock}`);
    console.log(`   –í—ñ–¥–ø–æ–≤—ñ–¥—å: "${response.memoryMessage}"`);
    console.log(`   –ï–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω: ${response.emotionalState}`);
    
    // –°–ª–∞–±–µ –≤–∏–±–∞—á–µ–Ω–Ω—è
    response = memory.analyzeMessage(users[1].id, users[1].username, users[1].firstName, '—Å–æ—Ä—ñ', false);
    console.log(`üòí –°–ª–∞–±–µ –≤–∏–±–∞—á–µ–Ω–Ω—è: "${response.memoryMessage}" (–ü—Ä–∏–π–Ω—è—Ç–æ: ${!response.shouldDemandApology})`);
    
    // –ù–æ—Ä–º–∞–ª—å–Ω–µ –≤–∏–±–∞—á–µ–Ω–Ω—è
    response = memory.analyzeMessage(users[1].id, users[1].username, users[1].firstName, '–í–∏–±–∞—á –º–µ–Ω–µ, —è –±—É–≤ –Ω–µ–ø—Ä–∞–≤–∏–π —ñ –±—ñ–ª—å—à–µ –Ω–µ –±—É–¥—É', false);
    console.log(`‚úÖ –•–æ—Ä–æ—à–µ –≤–∏–±–∞—á–µ–Ω–Ω—è: "${response.memoryMessage}" (–ü—Ä–∏–π–Ω—è—Ç–æ: ${response.shouldRewardGoodBehavior})`);
    
    // –¢–µ–ø–µ—Ä –ø—Ä–æ—Ö–∞–Ω–Ω—è –º–∞—î –ø—Ä–æ–π—Ç–∏
    response = memory.analyzeMessage(users[1].id, users[1].username, users[1].firstName, '–¢–µ–ø–µ—Ä –ø–æ–∫–∞–∂–∏ –º–µ–º', true);
    console.log(`üéØ –ü—Ä–æ—Ö–∞–Ω–Ω—è –ø—ñ—Å–ª—è –≤–∏–±–∞—á–µ–Ω–Ω—è: "${response.memoryMessage || '–í—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ–∑–≤–æ–ª–µ–Ω–∞'}" (–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: ${response.shouldBlock})`);
    
    console.log('\nüìù –°—Ü–µ–Ω–∞—Ä—ñ–π 3: –¢—è–∂–∫–∞ –æ–±—Ä–∞–∑–∞');
    console.log('=' .repeat(50));
    
    // –î—É–∂–µ –ø–æ–≥–∞–Ω–∞ –æ–±—Ä–∞–∑–∞
    response = memory.analyzeMessage(users[2].id, users[2].username, users[2].firstName, '–Ü–¥–∏ –Ω–∞—Ö—É–π, —Å—É–∫–∞!', false);
    console.log(`üíÄ –¢—è–∂–∫–∞ –æ–±—Ä–∞–∑–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞ (—Ä—ñ–≤–µ–Ω—å –≤–∏–±–∞—á–µ–Ω–Ω—è: ${memory.getUserProfile(users[2].id).apologyLevel})`);
    
    // –°–ø—Ä–æ–±–∞ –ø—Ä–æ—Ö–∞–Ω–Ω—è
    response = memory.analyzeMessage(users[2].id, users[2].username, users[2].firstName, '–î–æ–ø–æ–º–æ–∂–∏ –∑ –∫–æ–¥–æ–º', true);
    console.log(`üî• –í–∏–º–æ–≥–∞ –≤–∏–±–∞—á–µ–Ω–Ω—è:`);
    console.log(`   "${response.memoryMessage}"`);
    
    // –°–ø—Ä–æ–±–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–∏–±–∞—á–µ–Ω–Ω—è (–Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–ª—è humiliating)
    response = memory.analyzeMessage(users[2].id, users[2].username, users[2].firstName, '–í–∏–±–∞—á', false);
    console.log(`‚ùå –ü—Ä–æ—Å—Ç–µ –≤–∏–±–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ: "${response.memoryMessage}"`);
    
    // –©–∏—Ä–µ –≤–∏–±–∞—á–µ–Ω–Ω—è
    response = memory.analyzeMessage(users[2].id, users[2].username, users[2].firstName, '–ö–∞—é—Å—è, —è –±—É–≤ –¥—É–∂–µ –Ω–µ–ø—Ä–∞–≤–∏–π, –≤–∏–±–∞—á –º–µ–Ω–µ –±—É–¥—å –ª–∞—Å–∫–∞, –æ–±—ñ—Ü—è—é —â–æ –±—ñ–ª—å—à–µ –Ω–µ –±—É–¥—É —Ç–∞–∫ –ø–æ–≤–æ–¥–∏—Ç–∏—Å—è', false);
    console.log(`‚úÖ –©–∏—Ä–µ –≤–∏–±–∞—á–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ: "${response.memoryMessage}"`);
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º\'—è—Ç—ñ');
    console.log('=' .repeat(50));
    const stats = memory.getStats();
    console.log(`üë• –í—Å—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: ${stats.totalUsers}`);
    console.log(`‚ö†Ô∏è –ü–æ—Ç—Ä–µ–±—É—é—Ç—å –≤–∏–±–∞—á–µ–Ω–Ω—è: ${stats.usersNeedingApology}`);
    console.log(`üí¨ –í—Å—å–æ–≥–æ –≤–∑–∞—î–º–æ–¥—ñ–π: ${stats.totalInteractions}`);
    console.log(`üò° –û–±—Ä–∞–∑: ${stats.totalOffenses}`);
    console.log(`üòä –ö–æ–º–ø–ª–µ–º–µ–Ω—Ç—ñ–≤: ${stats.totalCompliments}`);
    console.log(`üìà –°–µ—Ä–µ–¥–Ω—î —Å—Ç–∞–≤–ª–µ–Ω–Ω—è: ${stats.averageAttitude.toFixed(2)}`);
    
    console.log('\nüë• –ü—Ä–æ—Ñ—ñ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤');
    console.log('=' .repeat(50));
    users.forEach(user => {
        const profile = memory.getUserProfile(user.id);
        if (profile) {
            console.log(`\n${user.username} (@${user.firstName}):`);
            console.log(`  üí≠ –°—Ç–∞–≤–ª–µ–Ω–Ω—è: ${profile.averageAttitude.toFixed(2)}`);
            console.log(`  üí¨ –í–∑–∞—î–º–æ–¥—ñ–π: ${profile.totalInteractions}`);
            console.log(`  üò° –û–±—Ä–∞–∑: ${profile.offensiveHistory.count}`);
            console.log(`  üòä –ö–æ–º–ø–ª–µ–º–µ–Ω—Ç—ñ–≤: ${profile.positiveHistory.count}`);
            console.log(`  üôè –ü–æ—Ç—Ä—ñ–±–Ω–µ –≤–∏–±–∞—á–µ–Ω–Ω—è: ${profile.needsApology ? '–¢–∞–∫ (' + profile.apologyLevel + ')' : '–ù—ñ'}`);
            
            if (profile.offensiveHistory.worstOffenses.length > 0) {
                console.log(`  üî• –ù–∞–π–≥—ñ—Ä—à—ñ –æ–±—Ä–∞–∑–∏:`);
                profile.offensiveHistory.worstOffenses.slice(0, 3).forEach((offense, i) => {
                    console.log(`     ${i + 1}. "${offense}"`);
                });
            }
        }
    });
    
    console.log('\nüé≠ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤–µ–¥—ñ–Ω–∫–∏ –ø—ñ—Å–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è');
    console.log('=' .repeat(50));
    
    // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ –ø–æ–≥–∞–Ω–æ—é —ñ—Å—Ç–æ—Ä—ñ—î—é –ø–∏—à–µ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç
    response = memory.analyzeMessage(users[1].id, users[1].username, users[1].firstName, '–î—è–∫—É—é, —Ç–∏ —á—É–¥–æ–≤–∏–π –±–æ—Ç!', false);
    console.log(`ü•∞ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è: "${response.memoryMessage || '–ù–µ–º–∞—î –æ—Å–æ–±–ª–∏–≤–æ—ó —Ä–µ–∞–∫—Ü—ñ—ó'}" (${response.emotionalState})`);
    
    console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç
try {
    testMemorySystem();
} catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
} 