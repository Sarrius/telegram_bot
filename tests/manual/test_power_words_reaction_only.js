const { EnhancedMessageHandler } = require('../../dist/usecases/enhancedMessageHandler');

console.log('‚ö° –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Power Words - —Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–∫—Ü—ñ—ó:');
console.log('='.repeat(50));

async function testPowerWordsReactionOnly() {
  const handler = new EnhancedMessageHandler();

  const testMessages = [
    { text: '–ü–æ—Ç—É–∂–Ω–æ –ø—Ä–∞—Ü—é—é —Å—å–æ–≥–æ–¥–Ω—ñ!', expected: '‚ö°' },
    { text: '–°—É–ø–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç!', expected: '‚ö°' },
    { text: '–ú–æ–≥—É—Ç–Ω—ñ–π —É—Å–ø—ñ—Ö –≤ –ø—Ä–æ–µ–∫—Ç—ñ', expected: 'üí™' },
    { text: '–û—Ñ—ñ–≥–µ–Ω–Ω–∏–π –¥–µ–Ω—å —Å—å–æ–≥–æ–¥–Ω—ñ', expected: 'üî•' },
    { text: '–¢–æ–ø —Ä–æ–±–æ—Ç–∞, –∫–ª–∞—Å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç', expected: '‚ö°' },
    { text: '–ú–µ–≥–∞ –∫—Ä—É—Ç–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º', expected: '‚ö°' },
    { text: '–ù–µ–π–º–æ–≤—ñ—Ä–Ω–æ –µ–Ω–µ—Ä–≥—ñ–π–Ω–∏–π –¥–µ–Ω—å', expected: 'üöÄ' },
    { text: '–ë–æ–º–±–µ–∑–Ω–∏–π —Ñ—ñ–¥–±–µ–∫ –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞', expected: 'üî•' }
  ];

  console.log('üîç –¢–µ—Å—Ç—É—î–º–æ, —â–æ power words –¥–∞—é—Ç—å —Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–∫—Ü—ñ—ó:\n');

  for (const { text, expected } of testMessages) {
    try {
      console.log(`üì© –¢–µ—Å—Ç—É—é: "${text}"`);
      
      const context = {
        text: text,
        userId: 'test_user_123',
        chatId: 'test_chat',
        userName: 'TestUser',
        chatType: 'group',
        isGroupChat: true,
        messageId: Math.floor(Math.random() * 1000000),
        isReplyToBot: false,
        mentionsBot: false,
        isDirectMention: false,
        requestsMeme: false
      };

      const response = await handler.handleMessage(context);
      
      if (response.responseType === 'power_word') {
        console.log(`   ‚úÖ –¢–∏–ø –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: ${response.responseType}`);
        console.log(`   ‚ö° –†–µ–∞–∫—Ü—ñ—è: ${response.reaction || '–Ω–µ–º–∞—î'}`);
        console.log(`   üí¨ –¢–µ–∫—Å—Ç–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: ${response.shouldReply ? response.reply : '–Ω–µ–º–∞—î'}`);
        console.log(`   üìä –í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å: ${(response.confidence * 100).toFixed(1)}%`);
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —î —Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–∫—Ü—ñ—è
        if (response.shouldReact && !response.shouldReply) {
          console.log(`   ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –¢—ñ–ª—å–∫–∏ —Ä–µ–∞–∫—Ü—ñ—è, –±–µ–∑ —Ç–µ–∫—Å—Ç—É`);
        } else if (response.shouldReact && response.shouldReply) {
          console.log(`   ‚ùå –ü–û–ú–ò–õ–ö–ê: –Ñ —ñ —Ä–µ–∞–∫—Ü—ñ—è, —ñ —Ç–µ–∫—Å—Ç!`);
        } else {
          console.log(`   ‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ–º–∞—î —Ä–µ–∞–∫—Ü—ñ—ó!`);
        }
        
        if (response.powerWordReaction) {
          console.log(`   üéØ Power Word: ${response.powerWordReaction.match.matchedWord} (${response.powerWordReaction.emoji})`);
        }
        
      } else if (response.responseType === 'none') {
        console.log(`   ‚ùå Power word –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ`);
      } else {
        console.log(`   ‚ö†Ô∏è –Ü–Ω—à–∏–π —Ç–∏–ø –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: ${response.responseType}`);
      }
      
      console.log(`   üí≠ Reasoning: ${response.reasoning}`);
      
    } catch (error) {
      console.error(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
    }
    
    console.log('‚îÄ'.repeat(60));
  }
}

async function testNonPowerWords() {
  const handler = new EnhancedMessageHandler();
  
  console.log('\nüîç –¢–µ—Å—Ç—É—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ —Å–ª–æ–≤–∞ (–Ω–µ power words):\n');

  const nonPowerMessages = [
    '–ó–≤–∏—á–∞–π–Ω–∏–π –¥–µ–Ω—å –Ω–∞ —Ä–æ–±–æ—Ç—ñ',
    '–ô–¥—É –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ —Ö–ª—ñ–±–æ–º', 
    '–î—è–∫—É—é –∑–∞ –¥–æ–ø–æ–º–æ–≥—É',
    '–Ø–∫ —Å–ø—Ä–∞–≤–∏ —É –≤—Å—ñ—Ö?',
    '–ü–æ–±–∞—á–∏–º–æ—Å—è –∑–∞–≤—Ç—Ä–∞'
  ];

  for (const text of nonPowerMessages) {
    try {
      console.log(`üì© –¢–µ—Å—Ç—É—é: "${text}"`);
      
      const context = {
        text: text,
        userId: 'test_user_456',
        chatId: 'test_chat',
        userName: 'TestUser',
        chatType: 'group',
        isGroupChat: true,
        messageId: Math.floor(Math.random() * 1000000),
        isReplyToBot: false,
        mentionsBot: false,
        isDirectMention: false,
        requestsMeme: false
      };

      const response = await handler.handleMessage(context);
      
      if (response.responseType === 'power_word') {
        console.log(`   ‚ùå –ü–û–ú–ò–õ–ö–ê: –í–∏—è–≤–ª–µ–Ω–æ power word —É –∑–≤–∏—á–∞–π–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ!`);
      } else {
        console.log(`   ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: Power word –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ`);
      }
      
      console.log(`   –¢–∏–ø –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: ${response.responseType}`);
      
    } catch (error) {
      console.error(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
    }
    
    console.log('');
  }
}

async function runTests() {
  console.log('‚ö° –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ Power Words (—Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–∫—Ü—ñ—ó)...\n');
  
  await testPowerWordsReactionOnly();
  await testNonPowerWords();
  
  console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ë–æ—Ç –º–∞—î —Å—Ç–∞–≤–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ power words, –±–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π.');
}

runTests().catch(console.error); 