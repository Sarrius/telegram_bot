const { NewsCommandsFuzzyMatcher } = require('../../dist/config/vocabulary/newsCommandsFuzzyMatcher');

const matcher = new NewsCommandsFuzzyMatcher();

console.log('üå§ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥ –ø–æ–≥–æ–¥–∏ –¥–ª—è –¢–µ—Ä–Ω–æ–ø–æ–ª—è:');
console.log('='.repeat(50));

const testCommands = [
  '–Ø–∫–∞ –ø–æ–≥–æ–¥–∞ –≤ –¢–µ—Ä–Ω–æ–ø–æ–ª—ñ?',
  '–ü–æ–≥–æ–¥–∞ –≤ –¢–µ—Ä–Ω–æ–ø–æ–ª—ñ',
  '–¢–µ—Ä–Ω–æ–ø—ñ–ª—å –ø–æ–≥–æ–¥–∞',
  '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –¢–µ—Ä–Ω–æ–ø–æ–ª—ñ',
  '–Ø–∫ –ø–æ–≥–æ–¥–∞ –≤ –¢–µ—Ä–Ω–æ–ø–æ–ª—é?',
  '–ø–æ–≥–æ–¥–∞ —Ç–µ—Ä–Ω–æ–ø—ñ–ª—å',
  '—è–∫–∞ –ø–æ–≥–æ–¥–∞ —Ç–µ—Ä–Ω–æ–ø—ñ–ª—å',
  '–ø–æ–≥–æ–¥–∞ –≤ —Ç–µ—Ä–Ω–æ–ø–æ–ª—å',
  '—è–∫ –Ω–∞ –≤—É–ª–∏—Ü—ñ –≤ —Ç–µ—Ä–Ω–æ–ø–æ–ª—ñ?',
  '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–µ—Ä–Ω–æ–ø—ñ–ª—å'
];

testCommands.forEach(command => {
  const result = matcher.recognizeCommand(command);
  
  if (result && result.type === 'weather') {
    console.log(`‚úÖ "${command}"`);
    console.log(`   –¢–∏–ø: ${result.type}`);
    console.log(`   –ú—ñ—Å—Ç–æ: ${result.city || '–Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ'}`);
    console.log(`   –í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å: ${(result.confidence * 100).toFixed(1)}%`);
    console.log(`   –ó–±—ñ–≥: ${result.matchedKeyword}`);
  } else if (result) {
    console.log(`‚ö†Ô∏è "${command}" - –≤–∏—è–≤–ª–µ–Ω–æ —è–∫ ${result.type} (–Ω–µ weather)`);
  } else {
    console.log(`‚ùå "${command}" - –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ`);
  }
  console.log('');
});

console.log('\nüåç –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –º—ñ—Å—Ç–∞:');
const stats = matcher.getRecognitionStats();
console.log(`–í—Å—å–æ–≥–æ –º—ñ—Å—Ç: ${stats.supportedCities}`);
console.log(`–í—Å—å–æ–≥–æ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤: ${stats.totalKeywords}`);
console.log(`–í—Å—å–æ–≥–æ –≤–∞—Ä—ñ–∞—Ü—ñ–π: ${stats.totalVariations}`); 