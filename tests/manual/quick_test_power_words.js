const { EnhancedMessageHandler } = require('../../dist/usecases/enhancedMessageHandler');

async function testPowerWordsQuick() {
  const handler = new EnhancedMessageHandler();
  
  const testCases = [
    '–ü–æ—Ç—É–∂–Ω–æ –ø—Ä–∞—Ü—é—é!',
    '–°—É–ø–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
    '–ú–æ–≥—É—Ç–Ω—ñ–π –∞–ª–≥–æ—Ä–∏—Ç–º', 
    '–û—Ñ—ñ–≥–µ–Ω–Ω–∞ —Ä–æ–±–æ—Ç–∞',
    '–¢–æ–ø –∫–æ–¥–∏–Ω–≥ —Å–µ—Å—ñ—è',
    '–ú–µ–≥–∞ –ø—Ä–æ–µ–∫—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ'
  ];
  
  console.log('‚ö° –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç Power Words:');
  console.log('='.repeat(40));
  
  for (const text of testCases) {
    const context = {
      messageId: Math.floor(Math.random() * 1000),
      text,
      chatId: 123,
      userId: 1,
      isPrivate: false,
      fromMe: false
    };
    
    const result = await handler.handleMessage(context);
    console.log(`üìù "${text}"`);
    console.log(`‚úÖ –†–µ–∞–∫—Ü—ñ—è: ${result.shouldReact ? result.reaction : '–Ω–µ–º–∞—î'}`);
    console.log(`üí¨ –í—ñ–¥–ø–æ–≤—ñ–¥—å: ${result.shouldReply ? '–¢–ê–ö' : '–ù–Ü'}`);
    console.log(`üéØ –í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å: ${(result.confidence * 100).toFixed(1)}%`);
    console.log('‚îÄ'.repeat(40));
  }
  
  console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

testPowerWordsQuick().catch(console.error); 