const { EnhancedMessageHandler } = require('../../dist/usecases/enhancedMessageHandler');

async function testBotBehavior() {
  console.log('ü§ñ Testing Enhanced Ukrainian Telegram Bot Behavior\n');
  
  const handler = new EnhancedMessageHandler();
  
  const testMessages = [
    // –ó–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–Ω–µ –ø–æ–≤–∏–Ω–Ω—ñ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é)
    { text: '–ø—Ä–∏–≤—ñ—Ç', description: '–ó–≤–∏—á–∞–π–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
    { text: '—è–∫ —Å–ø—Ä–∞–≤–∏?', description: '–ó–≤–∏—á–∞–π–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è' },
    { text: '–¥–æ–±—Ä–µ', description: '–ö–æ—Ä–æ—Ç–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å' },
    { text: '—â–æ —Ä–æ–±–∏—à?', description: '–ü–æ–≤—Å—è–∫–¥–µ–Ω–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è' },
    
    // –ó–∞–ø–∏—Ç–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π (–ø–æ–≤–∏–Ω–Ω—ñ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å)
    { text: '—â–æ —Ç–∏ –º–æ–∂–µ—à?', description: '–ó–∞–ø–∏—Ç –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π' },
    { text: 'what can you do?', description: 'English capabilities request' },
    { text: '–¥–æ–ø–æ–º–æ–≥–∞', description: '–ó–∞–ø–∏—Ç –¥–æ–ø–æ–º–æ–≥–∏' },
    
    // –°–∏–ª—å–Ω—ñ –µ–º–æ—Ü—ñ—ó (–º–æ–∂—É—Ç—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é)
    { text: '–°–£–ü–ï–† –ü–û–¢–£–ñ–ù–û!!! –í–ê–£!!!', description: '–î—É–∂–µ —Å–∏–ª—å–Ω—ñ –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ –µ–º–æ—Ü—ñ—ó' },
    { text: '–¥–æ–ø–æ–º–æ–∂–∏ –º–µ–Ω—ñ –±—É–¥—å –ª–∞—Å–∫–∞', description: '–ü—Ä–æ—Ö–∞–Ω–Ω—è –ø—Ä–æ –¥–æ–ø–æ–º–æ–≥—É' },
    { text: '–≤—Å—ñ–º –ø—Ä–∏–≤—ñ—Ç!', description: '–ì—Ä—É–ø–æ–≤–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
    
    // –ú–µ–º –∑–∞–ø–∏—Ç–∏
    { text: '—Å—Ç–≤–æ—Ä–∏ –º–µ–º –ø—Ä–æ –ø–æ–Ω–µ–¥—ñ–ª–æ–∫', description: '–ó–∞–ø–∏—Ç –º–µ–º—É' },
    { text: '/meme —Ç–æ–ø —Ç–µ–∫—Å—Ç | –Ω–∏–∑ —Ç–µ–∫—Å—Ç', description: '–ö–æ–º–∞–Ω–¥–∞ –º–µ–º—É' },
  ];
  
  for (const testMsg of testMessages) {
    console.log(`üìù –¢–µ—Å—Ç—É—î–º–æ: "${testMsg.text}" (${testMsg.description})`);
    
    const context = {
      text: testMsg.text,
      userId: 'test_user',
      chatId: 'test_chat',
      userName: 'TestUser',
      isGroupChat: true,
      messageId: Date.now(),
      isReplyToBot: false,
      mentionsBot: false,
      isDirectMention: false,
      requestsMeme: testMsg.text.includes('–º–µ–º') || testMsg.text.includes('meme'),
      memeRequest: testMsg.text.includes('–º–µ–º') || testMsg.text.includes('meme') ? testMsg.text : undefined
    };
    
    try {
      const response = await handler.handleMessage(context);
      
      console.log(`   üéØ –¢–∏–ø –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: ${response.responseType}`);
      console.log(`   ü§î –†—ñ—à–µ–Ω–Ω—è: ${response.reasoning}`);
      
      if (response.shouldReply && response.reply) {
        console.log(`   üí¨ –í—ñ–¥–ø–æ–≤—ñ–¥—å: ${response.reply.substring(0, 100)}...`);
      }
      
      if (response.shouldReact && response.reaction) {
        console.log(`   üòä –†–µ–∞–∫—Ü—ñ—è: ${response.reaction} (–ù–ï –Ω–∞–¥—Å–∏–ª–∞—î—Ç—å—Å—è —è–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)`);
      }
      
      if (response.responseType === 'none') {
        console.log(`   ü§ê –ë–æ—Ç –º–æ–≤—á–∏—Ç—å (–ø—Ä–∞–≤–∏–ª—å–Ω–æ!)`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
    }
    
    console.log('');
  }
  
  console.log('‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìä –í–∏—Å–Ω–æ–≤–∫–∏:');
  console.log('- –ë–æ—Ç –±—ñ–ª—å—à–µ –Ω–µ —Å–ø–∞–º–∏—Ç—å –µ–º–æ–¥–∂—ñ —è–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
  console.log('- –†–µ–∞–≥—É—î —Ç—ñ–ª—å–∫–∏ –Ω–∞ –≤–∞–∂–ª–∏–≤—ñ –∑–∞–ø–∏—Ç–∏ —Ç–∞ —Å–∏–ª—å–Ω—ñ –µ–º–æ—Ü—ñ—ó');
  console.log('- –ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –∑–∞–ø–∏—Ç–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π');
  console.log('- –ì–µ–Ω–µ—Ä—É—î –º–µ–º–∏ –∑–∞ –∑–∞–ø–∏—Ç–æ–º');
  console.log('- –Ü–≥–Ω–æ—Ä—É—î –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
}

testBotBehavior().catch(console.error); 