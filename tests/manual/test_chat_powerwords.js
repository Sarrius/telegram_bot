const { EnhancedMessageHandler } = require('../../dist/usecases/enhancedMessageHandler');

async function testPowerWords() {
  console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Ç—É–∂–Ω–∏—Ö —Å–ª—ñ–≤ –≤ EnhancedMessageHandler:');
  console.log('='.repeat(50));

  const handler = new EnhancedMessageHandler();

  const testMessages = [
    '–ü–æ—Ç—É–∂–Ω–æ –ø—Ä–∞—Ü—é—é —Å—å–æ–≥–æ–¥–Ω—ñ!',
    '–°—É–ø–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç!',
    '–ú–æ–≥—É—Ç–Ω—ñ–π —É—Å–ø—ñ—Ö –≤ –ø—Ä–æ–µ–∫—Ç—ñ',
    '–û—Ñ—ñ–≥–µ–Ω–Ω–∏–π –¥–µ–Ω—å —Å—å–æ–≥–æ–¥–Ω—ñ',
    '–¢–æ–ø —Ä–æ–±–æ—Ç–∞, –∫–ª–∞—Å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
    '–ú–µ–≥–∞ –∫—Ä—É—Ç–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º',
    '–ó–≤–∏—á–∞–π–Ω–∏–π –¥–µ–Ω—å –Ω–∞ —Ä–æ–±–æ—Ç—ñ'
  ];

  for (const message of testMessages) {
    try {
      console.log(`\nüì© –¢–µ—Å—Ç—É—é: "${message}"`);
      
      const context = {
        text: message,
        userId: 'test_user_123',
        chatId: 'test_chat',
        userName: 'TestUser',
        chatType: 'group',
        isGroupChat: true,
        messageId: 1,
        isReplyToBot: false,
        mentionsBot: false,
        isDirectMention: false,
        requestsMeme: false
      };

      const response = await handler.handleMessage(context);
      
      console.log(`   –¢–∏–ø –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: ${response.responseType}`);
      console.log(`   –†–µ–∞–∫—Ü—ñ—è: ${response.shouldReact ? response.reaction : '–Ω–µ–º–∞—î'}`);
      console.log(`   –í—ñ–¥–ø–æ–≤—ñ–¥—å: ${response.shouldReply ? response.reply : '–Ω–µ–º–∞—î'}`);
      console.log(`   –í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å: ${(response.confidence * 100).toFixed(1)}%`);
      
      if (response.powerWordReaction) {
        console.log(`   ‚ö° Power Word: ${response.powerWordReaction.emoji} (${response.powerWordReaction.match.matchedWord})`);
      } else {
        console.log(`   ‚ö° Power Word: –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ`);
      }
      
      console.log(`   Reasoning: ${response.reasoning}`);
    } catch (error) {
      console.error(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
    }
  }
}

testPowerWords().catch(console.error); 